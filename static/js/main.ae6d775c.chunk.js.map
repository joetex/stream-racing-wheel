{"version":3,"sources":["g920/wheel.js","g920/pedal.js","g920/pedals.js","g920/shifter.js","g920/shifterbase.js","RebindInputs.js","App.js","serviceWorker.js","index.js"],"names":["flatstore","set","Wheel","props","useWatch","imgWheel","wheelStyle","transform","get","width","height","alt","style","src","Pedal","id","axisValue","currentPos","downAmount","position","top","left","Pedals","imgGas","imgBrake","imgClutch","imgPedalBase","Shifter","imgShifter","halfGrid","gridSize","halfGridY","moveX","moveY","speed","gear","gearReverse","gear1","gear2","gear3","gear4","gear5","gear6","gear7","shifterStyle","transition","highlightStyle","backgroundColor","highlightX","highlightY","display","ShifterBase","imgShifterBase","ImageBind","paddingLeft","paddingBottom","fontWeight","color","paddingRight","title","name","type","value","onChange","e","target","InputBind","defaultValue","Number","parseInt","localStorage","setItem","options","RebindInputs","gamepad","axes","buttons","axisOptions","buttonOptions","displayAxes","displayButtons","length","parseFloat","pct","Math","min","toFixed","push","padding","margin","textAlign","key","btn","borderRadius","pressed","updateImage","className","onClick","defaultButtons","defaultAxes","i","touched","loadSaved","saved","getItem","indexOf","getSaved","App","gamePads","start","a","b","gamePadIndex","state","gameLoopStarted","rotation","gameLoop","bind","onGamepadConnected","window","addEventListener","gp","navigator","getGamepads","index","console","log","this","setState","toLowerCase","changeGamepad","gamepadIndex","Object","values","map","paddingTop","href","onWheelRotationChange","buttonStates","button","buttonState","axesStates","axis","axisWheel","axisGas","axisBrake","axisClutch","buttonGearReverse","buttonGear1","buttonGear2","buttonGear3","buttonGear4","buttonGear5","buttonGear6","buttonGear7","requestAnimationFrame","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae6d775c.chunk.js","sourcesContent":["import React from 'react';\r\nimport flatstore from 'flatstore';\r\n\r\nflatstore.set('maxrotation', 900);\r\n\r\nfunction Wheel(props) {\r\n\r\n    let [imgWheel] = flatstore.useWatch('imgWheel');\r\n    let [currentRotation] = flatstore.useWatch('valueWheel');\r\n\r\n    let maxrotation = flatstore.get('maxrotation');\r\n    let degrees = currentRotation * (maxrotation / 2);\r\n    let wheelStyle = {\r\n        transform: 'rotate(' + degrees + 'deg)'\r\n    };\r\n\r\n    return (\r\n        <img width=\"500px\" height=\"500px\" alt=\"\" style={wheelStyle} src={imgWheel} />\r\n    )\r\n\r\n}\r\n\r\nexport default Wheel;","import React from 'react';\r\n\r\nimport flatstore from 'flatstore';\r\nfunction Pedal(props) {\r\n\r\n    let [axisValue] = flatstore.useWatch(props.id);\r\n\r\n    let currentPos = props.downAmount * axisValue * -1;\r\n\r\n    let wheelStyle = {\r\n        width: '70px',\r\n        position: 'absolute',\r\n        top: props.top + 'px',\r\n        left: props.left + 'px',\r\n        transform: 'translateY(' + currentPos + 'px)'\r\n    };\r\n\r\n    return (\r\n        <img alt=\"\" style={wheelStyle} src={props.src} />\r\n    )\r\n\r\n}\r\n\r\nexport default Pedal;","import React from 'react';\r\n\r\nimport Pedal from './pedal';\r\nimport flatstore from 'flatstore';\r\nfunction Pedals(props) {\r\n\r\n    let [imgGas] = flatstore.useWatch('imgGas');\r\n    let [imgBrake] = flatstore.useWatch('imgBrake');\r\n    let [imgClutch] = flatstore.useWatch('imgClutch');\r\n    let [imgPedalBase] = flatstore.useWatch('imgPedalBase');\r\n\r\n\r\n    let pedalsStyle = {\r\n        width: '400px'\r\n    }\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <Pedal id='valueGas' top={-20} left={290} downAmount={50} src={imgGas} />\r\n            <Pedal id='valueBrake' top={-10} left={160} downAmount={50} src={imgBrake} />\r\n            <Pedal id='valueClutch' top={-10} left={40} downAmount={50} src={imgClutch} />\r\n\r\n            <img alt=\"\" style={pedalsStyle} src={imgPedalBase} />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Pedals;","import React from 'react';\r\nimport flatstore from 'flatstore';\r\nfunction Shifter(props) {\r\n\r\n    let [imgShifter] = flatstore.useWatch('imgShifter');\r\n\r\n    let halfGrid = props.gridSize / 2.0;\r\n    let halfGridY = props.gridSize / 2.2;\r\n    let moveX = 0;\r\n    let moveY = 0;\r\n\r\n\r\n    let speed = '100ms';\r\n    let highlightX = 0;\r\n    let highlightY = 0;\r\n\r\n    let gear = -1;\r\n\r\n    let [gearReverse] = flatstore.useWatch('valueGearReverse');\r\n    let [gear1] = flatstore.useWatch('valueGear1');\r\n    let [gear2] = flatstore.useWatch('valueGear2');\r\n    let [gear3] = flatstore.useWatch('valueGear3');\r\n    let [gear4] = flatstore.useWatch('valueGear4');\r\n    let [gear5] = flatstore.useWatch('valueGear5');\r\n    let [gear6] = flatstore.useWatch('valueGear6');\r\n    let [gear7] = flatstore.useWatch('valueGear7');\r\n    let [gear8] = flatstore.useWatch('valueGear8');\r\n\r\n    if (gearReverse) gear = 0;\r\n    if (gear1) gear = 1;\r\n    if (gear2) gear = 2;\r\n    if (gear3) gear = 3;\r\n    if (gear4) gear = 4;\r\n    if (gear5) gear = 5;\r\n    if (gear6) gear = 6;\r\n    if (gear7) gear = 7;\r\n    if (gear8) gear = 8;\r\n\r\n\r\n    switch (gear) {\r\n        case -1: speed = '500ms'; moveX = 0; moveY = 0; break;\r\n\r\n        case 1: moveX = -halfGrid; moveY = -halfGridY; break;\r\n        case 2: moveX = -halfGrid; moveY = halfGridY; break;\r\n        case 3: moveX = 0; moveY = -halfGridY; break;\r\n        case 4: moveX = 0; moveY = halfGridY; break;\r\n        case 5: moveX = halfGrid; moveY = -halfGridY; break;\r\n        case 6: moveX = halfGrid; moveY = halfGridY; break;\r\n        case 7: moveX = halfGrid + (halfGrid); moveY = halfGridY; break;\r\n        default: speed = '500ms'; moveX = 0; moveY = 0; break;\r\n    }\r\n    let shifterStyle = {\r\n        width: '150px',\r\n        'zIndex': '999',\r\n        position: 'absolute',\r\n        top: props.top + 'px',\r\n        left: props.left + 'px',\r\n        transition: 'all ' + speed,\r\n        transform: 'translate(' + moveX + 'px, ' + moveY + 'px)'\r\n    };\r\n\r\n\r\n\r\n    let highlightStyle = {\r\n        backgroundColor: 'red',\r\n        width: '10px',\r\n        height: '20px',\r\n        'zIndex': '999',\r\n        position: 'absolute',\r\n        top: highlightX + 'px',\r\n        left: highlightY + 'px',\r\n        display: 'none'\r\n    }\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <div style={highlightStyle}></div>\r\n            <img alt=\"\" style={shifterStyle} src={imgShifter} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Shifter;","import React from 'react';\r\nimport flatstore from 'flatstore';\r\nimport Shifter from './shifter';\r\n\r\nfunction ShifterBase(props) {\r\n\r\n    let [imgShifterBase] = flatstore.useWatch('imgShifterBase');\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <Shifter\r\n                top={70}\r\n                left={50}\r\n                gridSize={150}\r\n            />\r\n            <img alt=\"\" width=\"250px\" src={imgShifterBase} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ShifterBase;\r\n","import React from 'react';\r\nimport flatstore from 'flatstore';\r\n\r\nfunction RebindInputs(props) {\r\n\r\n    let [gamepad] = flatstore.useWatch('gamePad')\r\n    let [axes] = flatstore.useWatch('axes');\r\n    let [buttons] = flatstore.useWatch('buttons');\r\n\r\n    let axisOptions = [];\r\n    let buttonOptions = [];\r\n    let displayAxes = [];\r\n    let displayButtons = [];\r\n\r\n    if (!gamepad || !axes || !buttons)\r\n        return <></>\r\n\r\n    for (let id = 0; id < axes.length; id++) {\r\n        let axisValue = Number.parseFloat(axes[id]);\r\n        let pct = ((axisValue + 1.0) / 2.0) * 100;\r\n        pct = Math.min(pct, 100);\r\n        axisValue = axisValue.toFixed(3)\r\n        displayAxes.push(\r\n            <span\r\n                style={{\r\n                    padding: '0.5rem',\r\n                    width: '50px',\r\n                    height: '2rem',\r\n                    margin: '0.5rem',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    position: 'relative',\r\n                    display: 'inline-block',\r\n                    textAlign: 'center'\r\n                }}\r\n                key={\"displayAxes-\" + id}>\r\n                <span\r\n                    style={{\r\n                        width: (pct + '%'),\r\n                        height: '0.4rem',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        transition: 'width 0.05s linear',\r\n                        backgroundColor: 'white'\r\n                    }}\r\n                >\r\n\r\n                </span>\r\n                {id}\r\n            </span>\r\n        )\r\n        axisOptions.push(<option key={\"optionAxes-\" + id} value={id}>{id}</option>)\r\n    }\r\n\r\n    for (let id = 0; id < gamepad.buttons.length; id++) {\r\n        let btn = buttons[id];\r\n        displayButtons.push(\r\n            <span\r\n                key={\"displayButtons-\" + id}\r\n                style={{\r\n                    display: 'inline-block',\r\n                    textAlign: 'center',\r\n                    borderRadius: '50%',\r\n                    width: '2.5rem',\r\n                    height: '2.5rem',\r\n                    padding: '0.5rem',\r\n                    margin: '0.2rem',\r\n                    color: (!btn?.pressed ? 'white' : 'black'),\r\n                    backgroundColor: (!btn?.pressed ? '#222' : 'white')\r\n                }}>\r\n                {id}\r\n            </span>\r\n        )\r\n        buttonOptions.push(<option key={\"optionButtons-\" + id} value={id}>{id}</option>)\r\n    }\r\n\r\n    const updateImage = (key, value) => {\r\n        flatstore.set(key, value);\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    return (\r\n        <div style={{ paddingBottom: '3rem' }}>\r\n            <p style={{ color: 'white' }}>\r\n                Press and move your controller inputs to identify the ID needed to map the input to the correct binding.\r\n            </p>\r\n            <div id=\"displayAxes\" style={{ width: '100%', }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Axes IDs</h3>\r\n                {displayAxes}\r\n            </div>\r\n            <div id=\"displayButtons\" style={{ width: '100%', paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Button IDs</h3>\r\n                {displayButtons}\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Input Binding</h3>\r\n\r\n                <InputBind title=\"Wheel\" id=\"axisWheel\" options={axisOptions} />\r\n                <InputBind title=\"Gas\" id=\"axisGas\" options={axisOptions} />\r\n                <InputBind title=\"Break\" id=\"axisBrake\" options={axisOptions} />\r\n                <InputBind title=\"Clutch\" id=\"axisClutch\" options={axisOptions} />\r\n                <InputBind title=\"Gear Reverse\" id=\"buttonGearReverse\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 1\" id=\"buttonGear1\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 2\" id=\"buttonGear2\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 3\" id=\"buttonGear3\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 4\" id=\"buttonGear4\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 5\" id=\"buttonGear5\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 6\" id=\"buttonGear6\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 7\" id=\"buttonGear7\" options={buttonOptions} />\r\n                {/* <InputBind title=\"Gear 8\" id=\"buttonGear8\" options={buttonOptions} /> */}\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Change Images</h3>\r\n                <h5 style={{ fontWeight: 'light', color: 'white', padding: '0', paddingBottom: '1rem' }}>Enter an image URL to replace the existing image</h5>\r\n                <ImageBind title=\"Wheel\" id=\"imgWheel\" />\r\n                <ImageBind title=\"Pedal Base\" id=\"imgPedalBase\" />\r\n                <ImageBind title=\"Gas Pedal\" id=\"imgGas\" />\r\n                <ImageBind title=\"Brake Pedal\" id=\"imgBrake\" />\r\n                <ImageBind title=\"Clutch Petal\" id=\"imgClutch\" />\r\n                <ImageBind title=\"Shifter Base\" id=\"imgShifterBase\" />\r\n                <ImageBind title=\"Shifter Head\" id=\"imgShifter\" />\r\n\r\n                <button\r\n                    className=\"resetButton\"\r\n                    onClick={() => {\r\n                        updateImage('imgWheel', \"/stream-racing-wheel/g920/wheel.png\");\r\n                        updateImage('imgPedalBase', '/stream-racing-wheel/g920/pedals.png');\r\n                        updateImage('imgGas', '/stream-racing-wheel/g920/gas.png');\r\n                        updateImage('imgBrake', '/stream-racing-wheel/g920/brake.png');\r\n                        updateImage('imgClutch', '/stream-racing-wheel/g920/clutch.png');\r\n                        updateImage('imgShifterBase', '/stream-racing-wheel/g920/shifter-base.png');\r\n                        updateImage('imgShifter', '/stream-racing-wheel/g920/shifter.png');\r\n                    }}>Reset to Default</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction ImageBind(props) {\r\n\r\n    return (\r\n        <div style={{ display: 'block', paddingLeft: '1rem', paddingBottom: '0.5rem' }}>\r\n\r\n            <label style={{ fontWeight: 'light', color: 'white', paddingRight: '0.5rem', width: '150px', height: '2rem', display: 'inline-block' }}>\r\n                {props.title}\r\n            </label>\r\n            <input\r\n                name={props.id}\r\n                type=\"text\"\r\n                value={flatstore.get(props.id)}\r\n                onChange={(e) => {\r\n                    flatstore.set(props.id, e.target.value);\r\n                }}\r\n                style={{ height: '2rem', width: '400px' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputBind(props) {\r\n\r\n    return (\r\n        <div style={{ display: 'inline-block', paddingLeft: '1rem' }}>\r\n            <label style={{ fontWeight: 'light', color: 'white', paddingRight: '0.5rem', height: '2rem', display: 'inline-block' }}>\r\n                {props.title}\r\n            </label>\r\n            <select\r\n                style={{ height: '2rem', width: '50px' }}\r\n                name={props.id}\r\n                defaultValue={flatstore.get(props.id)}\r\n                onChange={(e) => {\r\n                    flatstore.set(props.id, Number.parseInt(e.target.value))\r\n                    localStorage.setItem(props.id, e.target.value);\r\n                }}\r\n            >\r\n                {props.options}\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RebindInputs;","import React, { Component } from 'react';\nimport './index.css';\n\nimport Wheel from './g920/wheel';\nimport Pedals from './g920/pedals';\nimport ShifterBase from './g920/shifterbase';\n\nimport RebindInputs from './RebindInputs';\n\n\nimport flatstore from 'flatstore';\n\nlet defaultButtons = [];\nlet defaultAxes = [];\nfor (let i = 0; i < 20; i++) {\n  defaultButtons.push({ pressed: false, touched: false, value: 0 })\n  defaultAxes.push(0);\n}\n\n\nfunction getSaved(key) {\n  let value = localStorage.getItem(key);\n  if (value !== null && typeof value !== 'undefined' && (key.indexOf(\"axis\") === 0 || key.indexOf(\"button\") === 0)) {\n    value = Number.parseInt(value);\n  }\n  return value;\n}\n\nfunction loadSaved(key, defaultValue) {\n  let saved = getSaved(key);\n\n  if (saved == null || typeof saved === 'undefined') {\n    flatstore.set(key, defaultValue);\n    localStorage.setItem(key, defaultValue);\n  }\n  else {\n    flatstore.set(key, saved);\n  }\n}\n\nloadSaved('axisWheel', 0);\nloadSaved('axisGas', 1);\nloadSaved('axisBrake', 2);\nloadSaved('axisClutch', 5);\nloadSaved('buttonGearReverse', 11);\nloadSaved('buttonGear1', 12);\nloadSaved('buttonGear2', 13);\nloadSaved('buttonGear3', 14);\nloadSaved('buttonGear4', 15);\nloadSaved('buttonGear5', 16);\nloadSaved('buttonGear6', 17);\nloadSaved('buttonGear7', 11);\n// loadSaved('buttonGear8', 1);\n\nloadSaved('imgWheel', \"/stream-racing-wheel/g920/wheel.png\");\nloadSaved('imgPedalBase', '/stream-racing-wheel/g920/pedals.png');\nloadSaved('imgGas', '/stream-racing-wheel/g920/gas.png');\nloadSaved('imgBrake', '/stream-racing-wheel/g920/brake.png');\nloadSaved('imgClutch', '/stream-racing-wheel/g920/clutch.png');\nloadSaved('imgShifterBase', '/stream-racing-wheel/g920/shifter-base.png');\nloadSaved('imgShifter', '/stream-racing-wheel/g920/shifter.png');\n\nflatstore.set('valueWheel', 0);\nflatstore.set('valueBrake', 0);\nflatstore.set('valueGas', 0);\nflatstore.set('valueCluch', 0);\nflatstore.set('valueGearReverse', 0);\nflatstore.set('valueGear1', 0);\nflatstore.set('valueGear2', 0);\nflatstore.set('valueGear3', 0);\nflatstore.set('valueGear4', 0);\nflatstore.set('valueGear5', 0);\nflatstore.set('valueGear6', 0);\nflatstore.set('valueGear7', 0);\n// flatstore.set('valueGear8', 0);\n\n\nflatstore.set(\"buttons\", defaultButtons);\nflatstore.set(\"axes\", defaultAxes);\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamePads = {};\n\n    this.start = 0;\n    this.a = 0;\n    this.b = 0;\n\n    this.gamePadIndex = -1;\n\n    this.state = {\n      gameLoopStarted: false,\n      rotation: 900\n    }\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.onGamepadConnected = this.onGamepadConnected.bind(this);\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n  }\n\n  onGamepadConnected(e) {\n    var gp = navigator.getGamepads()[e.gamepad.index];\n    console.log(\n      \"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\n      gp.index, gp.id, gp.buttons.length, gp.axes.length\n    );\n    this.gamePads[gp.index] = gp;\n    this.setState({ gamePads: this.gamePads })\n    if (gp.id.toLowerCase().indexOf(\"wheel\") > -1) {\n      this.changeGamepad(gp.index);\n    }\n  }\n\n  onChange(e) {\n    this.changeGamepad(e.target.value);\n\n  }\n\n  changeGamepad(id) {\n    console.log(id);\n    var gp = navigator.getGamepads()[id];\n    this.gamePadIndex = id;\n    flatstore.set('gamePad', gp)\n    this.setState({ gamepadIndex: id, gameLoopStarted: true })\n    this.gameLoop();\n  }\n\n  onWheelRotationChange(e) {\n    let rotation = e.target.value;\n    flatstore.set('maxrotation', rotation);\n    this.setState({ rotation })\n  }\n\n  render() {\n    //let gamepads = navigator.getGamepads();\n    //console.log(gamepads)\n    var options = Object.values(this.gamePads).map(gp => {\n\n      // let isSelected = gp.index === this.gamePadIndex;\n      return (<option\n        key={'optionsGamepad' + gp.index}\n        //selected={isSelected} \n        value={gp.index}>\n        {gp.id}\n      </option>)\n\n    }\n    );\n\n    return (\n      <div style={{ width: '100%', height: '100%', position: 'absolute', top: '0px', left: '0px', paddingTop: '1rem', paddingLeft: '2rem' }}>\n        <h1 style={{ color: 'white' }}>Stream Racing Wheel</h1>\n        <a style={{ color: 'white' }} href=\"https://github.com/joetex/stream-racing-wheel\">View on GitHub</a>\n        <br />\n        <br />\n        <label style={{ color: 'white', display: 'inline-block', paddingRight: '1rem', fontWeight: 'bold' }}>Controller Gamepad</label>\n        <select name=\"gamepadSelection\" defaultValue={this.gamePadIndex} onChange={(e) => { this.onChange(e) }}>\n          {options}\n        </select>\n        <br />\n        <label style={{ color: 'white', display: 'inline-block', paddingRight: '1rem', fontWeight: 'bold' }}>Max Rotation</label><input name=\"wheelRotation\" type=\"number\" value={this.state.rotation} onChange={(e) => { this.onWheelRotationChange(e) }} />\n        <br />\n        <br />\n        <span style={{ color: 'white' }}><strong>Scroll down</strong> to re-bind inputs and change images</span>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div style={{ width: '600px', }}>\n\n\n          <div style={{ position: 'relative', top: '20px', }}>\n            <Wheel rotation={this.state.rotation} />\n          </div>\n          <div style={{ position: 'relative', top: '-300px', left: \"500px\", 'marginLeft': '50px' }}>\n            <ShifterBase />\n          </div>\n          <div style={{ position: 'relative', top: '-170px', left: \"30px\", 'marginLeft': '50px' }}>\n            <Pedals />\n          </div>\n        </div>\n        <div style={{ paddingTop: '5rem' }}>\n          <RebindInputs />\n        </div>\n\n      </div>\n\n    )\n  }\n\n  buttonPressed(b) {\n    if (typeof (b) == \"object\") {\n      return b.pressed;\n    }\n    return b === 1.0;\n  }\n\n  gameLoop() {\n    if (this.gamePadIndex === -1)\n      return;\n\n    //var gp = this.gamePads[this.gamePadIndex];\n    var gp = navigator.getGamepads()[this.gamePadIndex];\n    let buttonStates = [];\n    for (let i = 0; i < gp.buttons.length; i++) {\n      let button = gp.buttons[i];\n      let buttonState = {\n        pressed: button.pressed,\n        touched: button.touched,\n        value: button.value\n      }\n      buttonStates.push(buttonState);\n    }\n\n    let axesStates = [];\n    for (let i = 0; i < gp.axes.length; i++) {\n      let axis = gp.axes[i];\n      axesStates.push(axis);\n    }\n\n    let axisWheel = flatstore.get('axisWheel');\n    let axisGas = flatstore.get('axisGas');\n    let axisBrake = flatstore.get('axisBrake');\n    let axisClutch = flatstore.get('axisClutch');\n\n    let buttonGearReverse = flatstore.get('buttonGearReverse');\n    let buttonGear1 = flatstore.get('buttonGear1');\n    let buttonGear2 = flatstore.get('buttonGear2');\n    let buttonGear3 = flatstore.get('buttonGear3');\n    let buttonGear4 = flatstore.get('buttonGear4');\n    let buttonGear5 = flatstore.get('buttonGear5');\n    let buttonGear6 = flatstore.get('buttonGear6');\n    let buttonGear7 = flatstore.get('buttonGear7');\n    // let buttonGear8 = flatstore.get('buttonGear8');\n\n    if (axisWheel != null)\n      flatstore.set('valueWheel', axesStates[axisWheel]);\n\n    if (axisGas != null)\n      flatstore.set('valueGas', axesStates[axisGas]);\n\n    if (axisBrake != null)\n      flatstore.set('valueBrake', axesStates[axisBrake]);\n\n    if (axisClutch != null)\n      flatstore.set('valueClutch', axesStates[axisClutch]);\n\n    if (buttonGearReverse != null)\n      flatstore.set('valueGearReverse', buttonStates[buttonGearReverse]?.pressed);\n    if (buttonGear1 != null)\n      flatstore.set('valueGear1', buttonStates[buttonGear1]?.pressed);\n    if (buttonGear2 != null)\n      flatstore.set('valueGear2', buttonStates[buttonGear2]?.pressed);\n    if (buttonGear3 != null)\n      flatstore.set('valueGear3', buttonStates[buttonGear3]?.pressed);\n    if (buttonGear4 != null)\n      flatstore.set('valueGear4', buttonStates[buttonGear4]?.pressed);\n    if (buttonGear5 != null)\n      flatstore.set('valueGear5', buttonStates[buttonGear5]?.pressed);\n    if (buttonGear6 != null)\n      flatstore.set('valueGear6', buttonStates[buttonGear6]?.pressed);\n    if (buttonGear7 != null)\n      flatstore.set('valueGear7', buttonStates[buttonGear7]?.pressed);\n    // if (buttonGear8 != null)\n    //   flatstore.set('valueGear8', buttonStates[buttonGear8].pressed);\n\n    flatstore.set(\"buttons\", buttonStates);\n    flatstore.set(\"axes\", axesStates);\n\n    this.start = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}