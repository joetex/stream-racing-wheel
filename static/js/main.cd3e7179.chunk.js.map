{"version":3,"sources":["g920/wheel.js","g920/pedal.js","g920/pedals.js","g920/shifter.js","g920/shifterbase.js","RebindInputs.js","App.js","serviceWorker.js","index.js"],"names":["WheelButtons","props","flatstore","useWatch","wheelStyle","WheelButtonMask","id","imgSrc","value","width","height","alt","style","position","top","left","transition","opacity","zIndex","src","set","Wheel","imgWheel","transform","get","Pedal","axisValue","currentPos","downAmount","Pedals","imgGas","imgBrake","imgClutch","imgPedalBase","Shifter","imgShifter","halfGrid","gridSize","halfGridY","moveX","moveY","speed","gear","gearReverse","gear1","gear2","gear3","gear4","gear5","gear6","gear7","shifterStyle","highlightStyle","backgroundColor","highlightX","highlightY","display","ShifterBase","imgShifterBase","ImageBind","paddingLeft","paddingBottom","fontWeight","color","paddingRight","title","name","type","onChange","e","target","InputBind","borderColor","defaultValue","Number","parseInt","localStorage","setItem","options","RebindInputs","gamepad","axes","buttons","axisOptions","buttonOptions","displayAxes","displayButtons","length","parseFloat","pct","Math","min","toFixed","push","padding","margin","textAlign","key","btn","borderRadius","pressed","updateImage","className","onClick","defaultButtons","defaultAxes","i","touched","loadSaved","saved","getItem","indexOf","getSaved","GamepadSelection","gamePadIndex","console","log","gp","navigator","getGamepads","gameLoop","changeGamepad","gamePads","Object","values","map","index","App","start","a","b","state","gameLoopStarted","rotation","wheelButtonsEnabled","bind","onGamepadConnected","window","addEventListener","this","setState","toLowerCase","gamepadIndex","paddingTop","href","onWheelRotationChange","buttonStates","button","buttonState","axesStates","axis","axisWheel","axisGas","axisBrake","axisClutch","buttonGearReverse","buttonGear1","buttonGear2","buttonGear3","buttonGear4","buttonGear5","buttonGear6","buttonGear7","btnWheel_DUp","btnWheel_DDown","btnWheel_DLeft","btnWheel_DRight","btnWheel_Back","btnWheel_Start","btnWheel_X","btnWheel_Y","btnWheel_A","btnWheel_B","btnWheel_RSB","btnWheel_LSB","btnWheel_LB","btnWheel_RB","requestAnimationFrame","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd3e7179.chunk.js","sourcesContent":["import React from 'react';\r\nimport flatstore from 'flatstore';\r\n\r\nflatstore.set('maxrotation', 900);\r\n\r\nfunction Wheel(props) {\r\n\r\n    let [imgWheel] = flatstore.useWatch('imgWheel');\r\n    let [currentRotation] = flatstore.useWatch('valueWheel');\r\n\r\n    let maxrotation = flatstore.get('maxrotation');\r\n    let degrees = currentRotation * (maxrotation / 2);\r\n    let wheelStyle = {\r\n        transform: 'rotate(' + degrees + 'deg)'\r\n    };\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n\r\n            <WheelButtons wheelStyle={wheelStyle} />\r\n\r\n            <img width=\"500px\" height=\"500px\" alt=\"\" style={wheelStyle} src={imgWheel} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction WheelButtons(props) {\r\n\r\n    let [wheelButtonsEnabled] = flatstore.useWatch('wheelButtonsEnabled');\r\n\r\n    if (!wheelButtonsEnabled) {\r\n        return <></>\r\n    }\r\n    let wheelStyle = props.wheelStyle;\r\n    return (\r\n        <>\r\n            <WheelButtonMask id=\"Wheel_DUp\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_DDown\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_DLeft\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_DRight\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_Back\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_Start\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_X\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_Y\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_A\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_B\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_RSB\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_LSB\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_LB\" wheelStyle={wheelStyle} />\r\n            <WheelButtonMask id=\"Wheel_RB\" wheelStyle={wheelStyle} />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction WheelButtonMask(props) {\r\n\r\n    let [imgSrc] = flatstore.useWatch(\"img\" + props.id);\r\n    let [value] = flatstore.useWatch(\"value\" + props.id);\r\n\r\n    return (\r\n        <img\r\n            width=\"500px\"\r\n            height=\"500px\"\r\n            alt=\"\"\r\n            style={{\r\n                ...props.wheelStyle,\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                transition: 'opacity 0.2s ease',\r\n                opacity: value ? 1 : 0,\r\n                zIndex: 99\r\n            }}\r\n            src={imgSrc}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Wheel;","import React from 'react';\r\n\r\nimport flatstore from 'flatstore';\r\nfunction Pedal(props) {\r\n\r\n    let [axisValue] = flatstore.useWatch(props.id);\r\n\r\n    let currentPos = props.downAmount * axisValue * -1;\r\n\r\n    let wheelStyle = {\r\n        width: '70px',\r\n        position: 'absolute',\r\n        top: props.top + 'px',\r\n        left: props.left + 'px',\r\n        transform: 'translateY(' + currentPos + 'px)'\r\n    };\r\n\r\n    return (\r\n        <img alt=\"\" style={wheelStyle} src={props.src} />\r\n    )\r\n\r\n}\r\n\r\nexport default Pedal;","import React from 'react';\r\n\r\nimport Pedal from './pedal';\r\nimport flatstore from 'flatstore';\r\nfunction Pedals(props) {\r\n\r\n    let [imgGas] = flatstore.useWatch('imgGas');\r\n    let [imgBrake] = flatstore.useWatch('imgBrake');\r\n    let [imgClutch] = flatstore.useWatch('imgClutch');\r\n    let [imgPedalBase] = flatstore.useWatch('imgPedalBase');\r\n\r\n\r\n    let pedalsStyle = {\r\n        width: '400px'\r\n    }\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <Pedal id='valueGas' top={-20} left={290} downAmount={50} src={imgGas} />\r\n            <Pedal id='valueBrake' top={-10} left={160} downAmount={50} src={imgBrake} />\r\n            <Pedal id='valueClutch' top={-10} left={40} downAmount={50} src={imgClutch} />\r\n\r\n            <img alt=\"\" style={pedalsStyle} src={imgPedalBase} />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Pedals;","import React from 'react';\r\nimport flatstore from 'flatstore';\r\nfunction Shifter(props) {\r\n\r\n    let [imgShifter] = flatstore.useWatch('imgShifter');\r\n\r\n    let halfGrid = props.gridSize / 2.0;\r\n    let halfGridY = props.gridSize / 2.2;\r\n    let moveX = 0;\r\n    let moveY = 0;\r\n\r\n\r\n    let speed = '100ms';\r\n    let highlightX = 0;\r\n    let highlightY = 0;\r\n\r\n    let gear = -1;\r\n\r\n    let [gearReverse] = flatstore.useWatch('valueGearReverse');\r\n    let [gear1] = flatstore.useWatch('valueGear1');\r\n    let [gear2] = flatstore.useWatch('valueGear2');\r\n    let [gear3] = flatstore.useWatch('valueGear3');\r\n    let [gear4] = flatstore.useWatch('valueGear4');\r\n    let [gear5] = flatstore.useWatch('valueGear5');\r\n    let [gear6] = flatstore.useWatch('valueGear6');\r\n    let [gear7] = flatstore.useWatch('valueGear7');\r\n    let [gear8] = flatstore.useWatch('valueGear8');\r\n\r\n    if (gearReverse) gear = 0;\r\n    if (gear1) gear = 1;\r\n    if (gear2) gear = 2;\r\n    if (gear3) gear = 3;\r\n    if (gear4) gear = 4;\r\n    if (gear5) gear = 5;\r\n    if (gear6) gear = 6;\r\n    if (gear7) gear = 7;\r\n    if (gear8) gear = 8;\r\n\r\n\r\n    switch (gear) {\r\n        case -1: speed = '500ms'; moveX = 0; moveY = 0; break;\r\n\r\n        case 1: moveX = -halfGrid; moveY = -halfGridY; break;\r\n        case 2: moveX = -halfGrid; moveY = halfGridY; break;\r\n        case 3: moveX = 0; moveY = -halfGridY; break;\r\n        case 4: moveX = 0; moveY = halfGridY; break;\r\n        case 5: moveX = halfGrid; moveY = -halfGridY; break;\r\n        case 6: moveX = halfGrid; moveY = halfGridY; break;\r\n        case 7: moveX = halfGrid + (halfGrid); moveY = halfGridY; break;\r\n        default: speed = '500ms'; moveX = 0; moveY = 0; break;\r\n    }\r\n    let shifterStyle = {\r\n        width: '150px',\r\n        'zIndex': '999',\r\n        position: 'absolute',\r\n        top: props.top + 'px',\r\n        left: props.left + 'px',\r\n        transition: 'all ' + speed,\r\n        transform: 'translate(' + moveX + 'px, ' + moveY + 'px)'\r\n    };\r\n\r\n\r\n\r\n    let highlightStyle = {\r\n        backgroundColor: 'red',\r\n        width: '10px',\r\n        height: '20px',\r\n        'zIndex': '999',\r\n        position: 'absolute',\r\n        top: highlightX + 'px',\r\n        left: highlightY + 'px',\r\n        display: 'none'\r\n    }\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <div style={highlightStyle}></div>\r\n            <img alt=\"\" style={shifterStyle} src={imgShifter} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Shifter;","import React from 'react';\r\nimport flatstore from 'flatstore';\r\nimport Shifter from './shifter';\r\n\r\nfunction ShifterBase(props) {\r\n\r\n    let [imgShifterBase] = flatstore.useWatch('imgShifterBase');\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <Shifter\r\n                top={70}\r\n                left={50}\r\n                gridSize={150}\r\n            />\r\n            <img alt=\"\" width=\"250px\" src={imgShifterBase} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ShifterBase;\r\n","import React from 'react';\r\nimport flatstore from 'flatstore';\r\n\r\nfunction RebindInputs(props) {\r\n\r\n    let [gamepad] = flatstore.useWatch('gamePad')\r\n    let [axes] = flatstore.useWatch('axes');\r\n    let [buttons] = flatstore.useWatch('buttons');\r\n\r\n    let axisOptions = [];\r\n    let buttonOptions = [];\r\n    let displayAxes = [];\r\n    let displayButtons = [];\r\n\r\n    if (!gamepad || !axes || !buttons)\r\n        return <></>\r\n\r\n    for (let id = 0; id < axes.length; id++) {\r\n        let axisValue = Number.parseFloat(axes[id]);\r\n        let pct = ((axisValue + 1.0) / 2.0) * 100;\r\n        pct = Math.min(pct, 100);\r\n        axisValue = axisValue.toFixed(3)\r\n        displayAxes.push(\r\n            <span\r\n                style={{\r\n                    padding: '0.5rem',\r\n                    width: '50px',\r\n                    height: '2rem',\r\n                    margin: '0.5rem',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    position: 'relative',\r\n                    display: 'inline-block',\r\n                    textAlign: 'center'\r\n                }}\r\n                key={\"displayAxes-\" + id}>\r\n                <span\r\n                    style={{\r\n                        width: (pct + '%'),\r\n                        height: '0.4rem',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        transition: 'width 0.05s linear',\r\n                        backgroundColor: 'white'\r\n                    }}\r\n                >\r\n\r\n                </span>\r\n                {id}\r\n            </span>\r\n        )\r\n        axisOptions.push(<option key={\"optionAxes-\" + id} value={id}>Axis {id}</option>)\r\n    }\r\n\r\n    for (let id = 0; id < gamepad.buttons.length; id++) {\r\n        let btn = buttons[id];\r\n        displayButtons.push(\r\n            <span\r\n                key={\"displayButtons-\" + id}\r\n                style={{\r\n                    display: 'inline-block',\r\n                    textAlign: 'center',\r\n                    borderRadius: '50%',\r\n                    width: '2.5rem',\r\n                    height: '2.5rem',\r\n                    padding: '0.5rem',\r\n                    margin: '0.2rem',\r\n                    color: (!btn?.pressed ? 'white' : 'black'),\r\n                    backgroundColor: (!btn?.pressed ? '#222' : 'white')\r\n                }}>\r\n                {id}\r\n            </span>\r\n        )\r\n        buttonOptions.push(<option key={\"optionButtons-\" + id} value={id}>Button {id}</option>)\r\n    }\r\n\r\n    const updateImage = (key, value) => {\r\n        flatstore.set(key, value);\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    return (\r\n        <div style={{ paddingBottom: '3rem' }}>\r\n            <p style={{ color: 'white' }}>\r\n                Press and move your controller inputs to identify the ID needed to map the input to the correct binding.\r\n            </p>\r\n            <div id=\"displayAxes\" style={{ width: '100%', }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Axes IDs</h3>\r\n                {displayAxes}\r\n            </div>\r\n            <div id=\"displayButtons\" style={{ width: '100%', paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Button IDs</h3>\r\n                {displayButtons}\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Wheel and Pedal Binding</h3>\r\n\r\n                <InputBind title=\"Wheel\" id=\"axisWheel\" options={axisOptions} />\r\n                <InputBind title=\"Gas\" id=\"axisGas\" options={axisOptions} />\r\n                <InputBind title=\"Break\" id=\"axisBrake\" options={axisOptions} />\r\n                <InputBind title=\"Clutch\" id=\"axisClutch\" options={axisOptions} />\r\n\r\n                {/* <InputBind title=\"Gear 8\" id=\"buttonGear8\" options={buttonOptions} /> */}\r\n\r\n\r\n\r\n            </div>\r\n            <div style={{ paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Gear Binding</h3>\r\n                <InputBind title=\"Gear Reverse\" id=\"buttonGearReverse\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 1\" id=\"buttonGear1\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 2\" id=\"buttonGear2\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 3\" id=\"buttonGear3\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 4\" id=\"buttonGear4\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 5\" id=\"buttonGear5\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 6\" id=\"buttonGear6\" options={buttonOptions} />\r\n                <InputBind title=\"Gear 7\" id=\"buttonGear7\" options={buttonOptions} />\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '1rem' }}>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Wheel Button Binding</h3>\r\n                <InputBind title=\"D-Up\" id=\"btnWheel_DUp\" options={buttonOptions} />\r\n                <InputBind title=\"D-Down\" id=\"btnWheel_DDown\" options={buttonOptions} />\r\n                <InputBind title=\"D-Left\" id=\"btnWheel_DLeft\" options={buttonOptions} />\r\n                <InputBind title=\"D-Right\" id=\"btnWheel_DRight\" options={buttonOptions} />\r\n                <InputBind title=\"Back\" id=\"btnWheel_Back\" options={buttonOptions} />\r\n                <InputBind title=\"Start\" id=\"btnWheel_Start\" options={buttonOptions} />\r\n                <br />\r\n                <InputBind title=\"X\" id=\"btnWheel_X\" options={buttonOptions} />\r\n                <InputBind title=\"Y\" id=\"btnWheel_Y\" options={buttonOptions} />\r\n                <InputBind title=\"A\" id=\"btnWheel_A\" options={buttonOptions} />\r\n                <InputBind title=\"B\" id=\"btnWheel_B\" options={buttonOptions} />\r\n                <InputBind title=\"RSB\" id=\"btnWheel_RSB\" options={buttonOptions} />\r\n                <InputBind title=\"LSB\" id=\"btnWheel_LSB\" options={buttonOptions} />\r\n                <InputBind title=\"LB\" id=\"btnWheel_LB\" options={buttonOptions} />\r\n                <InputBind title=\"RB\" id=\"btnWheel_RB\" options={buttonOptions} />\r\n            </div>\r\n            <div>\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Change Images</h3>\r\n                <h5 style={{ fontWeight: 'light', color: 'white', padding: '0', paddingBottom: '1rem' }}>Enter an image URL to replace the existing image</h5>\r\n                <ImageBind title=\"Wheel\" id=\"imgWheel\" />\r\n                <ImageBind title=\"Pedal Base\" id=\"imgPedalBase\" />\r\n                <ImageBind title=\"Gas Pedal\" id=\"imgGas\" />\r\n                <ImageBind title=\"Brake Pedal\" id=\"imgBrake\" />\r\n                <ImageBind title=\"Clutch Petal\" id=\"imgClutch\" />\r\n                <ImageBind title=\"Shifter Base\" id=\"imgShifterBase\" />\r\n                <ImageBind title=\"Shifter Head\" id=\"imgShifter\" />\r\n\r\n                <h3 style={{ color: 'white', padding: '1rem 0' }}>Change Wheel Button Masks</h3>\r\n                <ImageBind title=\"D-Up\" id=\"imgWheel_DUp\" />\r\n                <ImageBind title=\"D-Down\" id=\"imgWheel_DDown\" />\r\n                <ImageBind title=\"D-Left\" id=\"imgWheel_DLeft\" />\r\n                <ImageBind title=\"D-Right\" id=\"imgWheel_DRight\" />\r\n                <ImageBind title=\"Back\" id=\"imgWheel_Back\" />\r\n                <ImageBind title=\"Start\" id=\"imgWheel_Start\" />\r\n\r\n                <ImageBind title=\"X\" id=\"imgWheel_X\" />\r\n                <ImageBind title=\"Y\" id=\"imgWheel_Y\" />\r\n                <ImageBind title=\"A\" id=\"imgWheel_A\" />\r\n                <ImageBind title=\"B\" id=\"imgWheel_B\" />\r\n                <ImageBind title=\"RSB\" id=\"imgWheel_RSB\" />\r\n                <ImageBind title=\"LSB\" id=\"imgWheel_LSB\" />\r\n                <ImageBind title=\"LB\" id=\"imgWheel_LB\" />\r\n                <ImageBind title=\"RB\" id=\"imgWheel_RB\" />\r\n\r\n\r\n                <button\r\n                    className=\"resetButton\"\r\n                    onClick={() => {\r\n                        updateImage('imgWheel', \"/stream-racing-wheel/g920/wheel.png\");\r\n                        updateImage('imgPedalBase', '/stream-racing-wheel/g920/pedals.png');\r\n                        updateImage('imgGas', '/stream-racing-wheel/g920/gas.png');\r\n                        updateImage('imgBrake', '/stream-racing-wheel/g920/brake.png');\r\n                        updateImage('imgClutch', '/stream-racing-wheel/g920/clutch.png');\r\n                        updateImage('imgShifterBase', '/stream-racing-wheel/g920/shifter-base.png');\r\n                        updateImage('imgShifter', '/stream-racing-wheel/g920/shifter.png');\r\n\r\n                        updateImage('imgWheel_DUp', \"/stream-racing-wheel/g920/DUp.png\");\r\n                        updateImage('imgWheel_DDown', \"/stream-racing-wheel/g920/DDown.png\");\r\n                        updateImage('imgWheel_DLeft', \"/stream-racing-wheel/g920/DLeft.png\");\r\n                        updateImage('imgWheel_DRight', \"/stream-racing-wheel/g920/DRight.png\");\r\n                        updateImage('imgWheel_Back', \"/stream-racing-wheel/g920/Back.png\");\r\n                        updateImage('imgWheel_Start', \"/stream-racing-wheel/g920/Start.png\");\r\n                        updateImage('imgWheel_X', \"/stream-racing-wheel/g920/X.png\");\r\n                        updateImage('imgWheel_Y', \"/stream-racing-wheel/g920/Y.png\");\r\n                        updateImage('imgWheel_A', \"/stream-racing-wheel/g920/A.png\");\r\n                        updateImage('imgWheel_B', \"/stream-racing-wheel/g920/B.png\");\r\n                        updateImage('imgWheel_RSB', \"/stream-racing-wheel/g920/RSB.png\");\r\n                        updateImage('imgWheel_LSB', \"/stream-racing-wheel/g920/LSB.png\");\r\n                        updateImage('imgWheel_LB', \"/stream-racing-wheel/g920/LB.png\");\r\n                        updateImage('imgWheel_RB', \"/stream-racing-wheel/g920/RB.png\");\r\n                    }}>Reset to Default</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n/*\r\n\r\n*/\r\n\r\nfunction ImageBind(props) {\r\n\r\n    return (\r\n        <div style={{ display: 'block', paddingLeft: '1rem', paddingBottom: '0.5rem' }}>\r\n\r\n            <label style={{ fontWeight: 'light', color: 'white', paddingRight: '0.5rem', width: '150px', height: '2rem', display: 'inline-block' }}>\r\n                {props.title}\r\n            </label>\r\n            <input\r\n                name={props.id}\r\n                type=\"text\"\r\n                value={flatstore.get(props.id)}\r\n                onChange={(e) => {\r\n                    flatstore.set(props.id, e.target.value);\r\n                }}\r\n                style={{ height: '2rem', width: '400px' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputBind(props) {\r\n\r\n    return (\r\n        <div style={{ display: 'inline-block', paddingLeft: '1rem' }}>\r\n            <label style={{ fontWeight: 'bold', color: '#eee', paddingRight: '0.5rem', height: '2rem', display: 'inline-block' }}>\r\n                {props.title}\r\n            </label>\r\n            <select\r\n                style={{ height: '2rem', width: '100px', color: 'white', backgroundColor: \"rgb(34, 34, 34)\", borderColor: \"rgb(34, 34, 34)\" }}\r\n                name={props.id}\r\n                defaultValue={flatstore.get(props.id)}\r\n                onChange={(e) => {\r\n                    flatstore.set(props.id, Number.parseInt(e.target.value))\r\n                    localStorage.setItem(props.id, e.target.value);\r\n                }}\r\n            >\r\n                {props.options}\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RebindInputs;","import React, { Component } from 'react';\nimport './index.css';\n\nimport Wheel from './g920/wheel';\nimport Pedals from './g920/pedals';\nimport ShifterBase from './g920/shifterbase';\n\nimport RebindInputs from './RebindInputs';\n\n\nimport flatstore from 'flatstore';\n\nlet defaultButtons = [];\nlet defaultAxes = [];\nfor (let i = 0; i < 20; i++) {\n  defaultButtons.push({ pressed: false, touched: false, value: 0 })\n  defaultAxes.push(0);\n}\n\n\nfunction getSaved(key) {\n  let value = localStorage.getItem(key);\n  if (value !== null && typeof value !== 'undefined' && (key.indexOf(\"axis\") === 0 || key.indexOf(\"button\") === 0)) {\n    value = Number.parseInt(value);\n  }\n  return value;\n}\n\nfunction loadSaved(key, defaultValue) {\n  let saved = getSaved(key);\n\n  if (saved == null || typeof saved === 'undefined') {\n    flatstore.set(key, defaultValue);\n    localStorage.setItem(key, defaultValue);\n  }\n  else {\n    flatstore.set(key, saved);\n  }\n}\n\nloadSaved('axisWheel', 0);\nloadSaved('axisGas', 1);\nloadSaved('axisBrake', 2);\nloadSaved('axisClutch', 5);\nloadSaved('buttonGearReverse', 11);\nloadSaved('buttonGear1', 12);\nloadSaved('buttonGear2', 13);\nloadSaved('buttonGear3', 14);\nloadSaved('buttonGear4', 15);\nloadSaved('buttonGear5', 16);\nloadSaved('buttonGear6', 17);\nloadSaved('buttonGear7', 11);\n// loadSaved('buttonGear8', 1);\n\nloadSaved('btnWheel_DUp', 12);\nloadSaved('btnWheel_DDown', 13);\nloadSaved('btnWheel_DLeft', 14);\nloadSaved('btnWheel_DRight', 15);\nloadSaved('btnWheel_Back', 8);\nloadSaved('btnWheel_Start', 9);\nloadSaved('btnWheel_X', 2);\nloadSaved('btnWheel_Y', 3);\nloadSaved('btnWheel_A', 0);\nloadSaved('btnWheel_B', 1);\nloadSaved('btnWheel_RSB', 11);\nloadSaved('btnWheel_LSB', 10);\nloadSaved('btnWheel_LB', 4);\nloadSaved('btnWheel_RB', 5);\n\n\nloadSaved('imgWheel', \"/stream-racing-wheel/g920/wheel.png\");\n\nloadSaved('imgWheel_DUp', \"/stream-racing-wheel/g920/DUp.png\");\nloadSaved('imgWheel_DDown', \"/stream-racing-wheel/g920/DDown.png\");\nloadSaved('imgWheel_DLeft', \"/stream-racing-wheel/g920/DLeft.png\");\nloadSaved('imgWheel_DRight', \"/stream-racing-wheel/g920/DRight.png\");\nloadSaved('imgWheel_Back', \"/stream-racing-wheel/g920/Back.png\");\nloadSaved('imgWheel_Start', \"/stream-racing-wheel/g920/Start.png\");\nloadSaved('imgWheel_X', \"/stream-racing-wheel/g920/X.png\");\nloadSaved('imgWheel_Y', \"/stream-racing-wheel/g920/Y.png\");\nloadSaved('imgWheel_A', \"/stream-racing-wheel/g920/A.png\");\nloadSaved('imgWheel_B', \"/stream-racing-wheel/g920/B.png\");\nloadSaved('imgWheel_RSB', \"/stream-racing-wheel/g920/RSB.png\");\nloadSaved('imgWheel_LSB', \"/stream-racing-wheel/g920/LSB.png\");\nloadSaved('imgWheel_LB', \"/stream-racing-wheel/g920/LB.png\");\nloadSaved('imgWheel_RB', \"/stream-racing-wheel/g920/RB.png\");\n\nloadSaved('imgPedalBase', '/stream-racing-wheel/g920/pedals.png');\nloadSaved('imgGas', '/stream-racing-wheel/g920/gas.png');\nloadSaved('imgBrake', '/stream-racing-wheel/g920/brake.png');\nloadSaved('imgClutch', '/stream-racing-wheel/g920/clutch.png');\nloadSaved('imgShifterBase', '/stream-racing-wheel/g920/shifter-base.png');\nloadSaved('imgShifter', '/stream-racing-wheel/g920/shifter.png');\n\nflatstore.set('valueWheel', 0);\nflatstore.set('valueBrake', 0);\nflatstore.set('valueGas', 0);\nflatstore.set('valueCluch', 0);\nflatstore.set('valueGearReverse', 0);\nflatstore.set('valueGear1', 0);\nflatstore.set('valueGear2', 0);\nflatstore.set('valueGear3', 0);\nflatstore.set('valueGear4', 0);\nflatstore.set('valueGear5', 0);\nflatstore.set('valueGear6', 0);\nflatstore.set('valueGear7', 0);\n\n\nflatstore.set('valueWheel_DUp', 0);\nflatstore.set('valueWheel_DDown', 0);\nflatstore.set('valueWheel_DLeft', 0);\nflatstore.set('valueWheel_DRight', 0);\nflatstore.set('valueWheel_Back', 0);\nflatstore.set('valueWheel_Start', 0);\nflatstore.set('valueWheel_X', 0);\nflatstore.set('valueWheel_Y', 0);\nflatstore.set('valueWheel_A', 0);\nflatstore.set('valueWheel_B', 0);\nflatstore.set('valueWheel_RSB', 0);\nflatstore.set('valueWheel_LSB', 0);\nflatstore.set('valueWheel_LB', 0);\nflatstore.set('valueWheel_RB', 0);\n// flatstore.set('valueGear8', 0);\n\n\nflatstore.set(\"buttons\", defaultButtons);\nflatstore.set(\"axes\", defaultAxes);\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamePads = {};\n\n    this.start = 0;\n    this.a = 0;\n    this.b = 0;\n\n    this.gamePadIndex = -1;\n\n    this.state = {\n      gameLoopStarted: false,\n      rotation: 900,\n      wheelButtonsEnabled: 0\n    }\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.onGamepadConnected = this.onGamepadConnected.bind(this);\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n  }\n\n  onGamepadConnected(e) {\n    var gp = navigator.getGamepads()[e.gamepad.index];\n    console.log(\n      \"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\n      gp.index, gp.id, gp.buttons.length, gp.axes.length\n    );\n\n    let currentGamePad = flatstore.get('gamePad');\n    if (!currentGamePad) {\n      this.changeGamepad(gp.index);\n    }\n\n    this.gamePads[gp.index] = gp;\n    this.setState({ gamePads: this.gamePads })\n    if (gp.id.toLowerCase().indexOf(\"wheel\") > -1) {\n      this.changeGamepad(gp.index);\n    }\n  }\n\n  onChange(e) {\n    this.changeGamepad(e.target.value);\n\n  }\n\n  changeGamepad(id) {\n    console.log(id);\n    var gp = navigator.getGamepads()[id];\n    this.gamePadIndex = id;\n    flatstore.set('gamePad', gp)\n    this.setState({ gamepadIndex: id, gameLoopStarted: true })\n    this.gameLoop();\n  }\n\n  onWheelRotationChange(e) {\n    let rotation = e.target.value;\n    flatstore.set('maxrotation', rotation);\n    this.setState({ rotation })\n  }\n\n  render() {\n    //let gamepads = navigator.getGamepads();\n    //console.log(gamepads)\n\n\n    return (\n      <div style={{ width: '100%', height: '100%', position: 'absolute', top: '0px', left: '0px', paddingTop: '1rem', paddingLeft: '2rem' }}>\n        <h1 style={{ color: 'white' }}>Stream Racing Wheel</h1>\n        <a style={{ color: 'white' }} href=\"https://github.com/joetex/stream-racing-wheel\">View on GitHub</a>\n        <br />\n        <br />\n        <GamepadSelection onChange={(e) => { this.onChange(e) }} />\n        <br />\n        <label style={{ color: 'white', display: 'inline-block', paddingRight: '1rem', fontWeight: 'bold' }}>\n          Max Rotation\n        </label>\n        <input name=\"wheelRotation\"\n          type=\"number\"\n          value={this.state.rotation}\n          onChange={(e) => {\n            this.onWheelRotationChange(e)\n          }} />\n        <br />\n        <label style={{ color: 'white', display: 'inline-block', paddingTop: '0.5rem', paddingRight: '1rem', fontWeight: 'bold' }}>\n          Show Wheel Button Presses\n        </label>\n        <select name=\"wheelButtonsEnabled\"\n          type=\"number\"\n          value={this.state.wheelButtonsEnabled}\n          onChange={(e) => {\n            // this.onWheelRotationChange(e)\n\n            let wheelButtonsEnabled = Number.parseInt(e.target.value);\n            flatstore.set('wheelButtonsEnabled', wheelButtonsEnabled);\n            this.setState({ wheelButtonsEnabled })\n\n          }}>\n          <option value=\"0\">No</option>\n          <option value=\"1\">Yes</option>\n        </select>\n        <br />\n        <br />\n        <span style={{ color: 'white' }}><strong>Scroll down</strong> to re-bind inputs and change images</span>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div style={{ width: '600px', }}>\n\n\n          <div style={{ position: 'relative', top: '20px', }}>\n            <Wheel rotation={this.state.rotation} />\n          </div>\n          <div style={{ position: 'relative', top: '-300px', left: \"500px\", 'marginLeft': '50px' }}>\n            <ShifterBase />\n          </div>\n          <div style={{ position: 'relative', top: '-170px', left: \"30px\", 'marginLeft': '50px' }}>\n            <Pedals />\n          </div>\n        </div>\n        <div style={{ paddingTop: '5rem' }}>\n          <RebindInputs />\n        </div>\n\n      </div>\n\n    )\n  }\n\n  buttonPressed(b) {\n    if (typeof (b) == \"object\") {\n      return b.pressed;\n    }\n    return b === 1.0;\n  }\n\n  gameLoop() {\n    if (this.gamePadIndex === -1)\n      return;\n\n    //var gp = this.gamePads[this.gamePadIndex];\n    var gp = navigator.getGamepads()[this.gamePadIndex];\n    let buttonStates = [];\n    for (let i = 0; i < gp.buttons.length; i++) {\n      let button = gp.buttons[i];\n      let buttonState = {\n        pressed: button.pressed,\n        touched: button.touched,\n        value: button.value\n      }\n      buttonStates.push(buttonState);\n    }\n\n    let axesStates = [];\n    for (let i = 0; i < gp.axes.length; i++) {\n      let axis = gp.axes[i];\n      axesStates.push(axis);\n    }\n\n    let axisWheel = flatstore.get('axisWheel');\n    let axisGas = flatstore.get('axisGas');\n    let axisBrake = flatstore.get('axisBrake');\n    let axisClutch = flatstore.get('axisClutch');\n\n    let buttonGearReverse = flatstore.get('buttonGearReverse');\n    let buttonGear1 = flatstore.get('buttonGear1');\n    let buttonGear2 = flatstore.get('buttonGear2');\n    let buttonGear3 = flatstore.get('buttonGear3');\n    let buttonGear4 = flatstore.get('buttonGear4');\n    let buttonGear5 = flatstore.get('buttonGear5');\n    let buttonGear6 = flatstore.get('buttonGear6');\n    let buttonGear7 = flatstore.get('buttonGear7');\n\n    let btnWheel_DUp = flatstore.get('btnWheel_DUp');\n    let btnWheel_DDown = flatstore.get('btnWheel_DDown');\n    let btnWheel_DLeft = flatstore.get('btnWheel_DLeft');\n    let btnWheel_DRight = flatstore.get('btnWheel_DRight');\n    let btnWheel_Back = flatstore.get('btnWheel_Back');\n    let btnWheel_Start = flatstore.get('btnWheel_Start');\n    let btnWheel_X = flatstore.get('btnWheel_X');\n    let btnWheel_Y = flatstore.get('btnWheel_Y');\n    let btnWheel_A = flatstore.get('btnWheel_A');\n    let btnWheel_B = flatstore.get('btnWheel_B');\n    let btnWheel_RSB = flatstore.get('btnWheel_RSB');\n    let btnWheel_LSB = flatstore.get('btnWheel_LSB');\n    let btnWheel_LB = flatstore.get('btnWheel_LB');\n    let btnWheel_RB = flatstore.get('btnWheel_RB');\n\n\n    // let buttonGear8 = flatstore.get('buttonGear8');\n\n    if (axisWheel != null)\n      flatstore.set('valueWheel', axesStates[axisWheel]);\n\n    if (axisGas != null)\n      flatstore.set('valueGas', axesStates[axisGas]);\n\n    if (axisBrake != null)\n      flatstore.set('valueBrake', axesStates[axisBrake]);\n\n    if (axisClutch != null)\n      flatstore.set('valueClutch', axesStates[axisClutch]);\n\n    if (buttonGearReverse != null)\n      flatstore.set('valueGearReverse', buttonStates[buttonGearReverse]?.pressed);\n    if (buttonGear1 != null)\n      flatstore.set('valueGear1', buttonStates[buttonGear1]?.pressed);\n    if (buttonGear2 != null)\n      flatstore.set('valueGear2', buttonStates[buttonGear2]?.pressed);\n    if (buttonGear3 != null)\n      flatstore.set('valueGear3', buttonStates[buttonGear3]?.pressed);\n    if (buttonGear4 != null)\n      flatstore.set('valueGear4', buttonStates[buttonGear4]?.pressed);\n    if (buttonGear5 != null)\n      flatstore.set('valueGear5', buttonStates[buttonGear5]?.pressed);\n    if (buttonGear6 != null)\n      flatstore.set('valueGear6', buttonStates[buttonGear6]?.pressed);\n    if (buttonGear7 != null)\n      flatstore.set('valueGear7', buttonStates[buttonGear7]?.pressed);\n\n\n\n    if (btnWheel_DUp != null)\n      flatstore.set('valueWheel_DUp', buttonStates[btnWheel_DUp]?.pressed);\n    if (btnWheel_DDown != null)\n      flatstore.set('valueWheel_DDown', buttonStates[btnWheel_DDown]?.pressed);\n    if (btnWheel_DLeft != null)\n      flatstore.set('valueWheel_DLeft', buttonStates[btnWheel_DLeft]?.pressed);\n    if (btnWheel_DRight != null)\n      flatstore.set('valueWheel_DRight', buttonStates[btnWheel_DRight]?.pressed);\n    if (btnWheel_Back != null)\n      flatstore.set('valueWheel_Back', buttonStates[btnWheel_Back]?.pressed);\n    if (btnWheel_Start != null)\n      flatstore.set('valueWheel_Start', buttonStates[btnWheel_Start]?.pressed);\n    if (btnWheel_X != null)\n      flatstore.set('valueWheel_X', buttonStates[btnWheel_X]?.pressed);\n    if (btnWheel_Y != null)\n      flatstore.set('valueWheel_Y', buttonStates[btnWheel_Y]?.pressed);\n    if (btnWheel_A != null)\n      flatstore.set('valueWheel_A', buttonStates[btnWheel_A]?.pressed);\n    if (btnWheel_B != null)\n      flatstore.set('valueWheel_B', buttonStates[btnWheel_B]?.pressed);\n    if (btnWheel_RSB != null)\n      flatstore.set('valueWheel_RSB', buttonStates[btnWheel_RSB]?.pressed);\n    if (btnWheel_LSB != null)\n      flatstore.set('valueWheel_LSB', buttonStates[btnWheel_LSB]?.pressed);\n    if (btnWheel_LB != null)\n      flatstore.set('valueWheel_LB', buttonStates[btnWheel_LB]?.pressed);\n    if (btnWheel_RB != null)\n      flatstore.set('valueWheel_RB', buttonStates[btnWheel_RB]?.pressed);\n\n    // if (buttonGear8 != null)\n    //   flatstore.set('valueGear8', buttonStates[buttonGear8].pressed);\n\n    flatstore.set(\"buttons\", buttonStates);\n    flatstore.set(\"axes\", axesStates);\n\n    this.start = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nfunction GamepadSelection(props) {\n\n  let [gamePadIndex] = flatstore.useWatch('gamePadIndex');\n\n  const changeGamepad = (id) => {\n    console.log(id);\n    var gp = navigator.getGamepads()[id];\n\n    flatstore.set('gamePadIndex', id);\n\n    // gamePadIndex = id;\n    flatstore.set('gamePad', gp)\n    // this.setState({ gamepadIndex: id, gameLoopStarted: true })\n    this.gameLoop();\n  }\n\n  const onChange = (e) => {\n    changeGamepad(e.target.value);\n  }\n\n  let gamePads = navigator.getGamepads();\n\n  var options = Object.values(gamePads).map(gp => {\n    if (!gp)\n      return null;\n    // let isSelected = gp.index === this.gamePadIndex;\n    return (<option\n      key={'optionsGamepad' + gp.id}\n      //selected={isSelected} \n      value={gp.index}>\n      {gp.id}\n    </option>)\n\n  }\n  );\n\n\n  return (\n    <div>\n      <label style={{ color: 'white', display: 'inline-block', paddingRight: '1rem', fontWeight: 'bold' }}>Controller Gamepad</label>\n      <select name=\"gamepadSelection\" defaultValue={gamePadIndex} onChange={(e) => { onChange(e); props.onChange(e); }}>\n        {options}\n      </select>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}